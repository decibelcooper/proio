branches:
    only:
        - master

stages:
    - test
    - name: doc
      if: type = push

matrix:
    include:
        - language: cpp
          compiler: g++
          env:
              - PROTOBUF_VERSION: v3.1.0
              - LZ4_VERSION: v1.8.0
          install:
              - git clone https://github.com/lz4/lz4.git
              - cd lz4
              - git checkout tags/$LZ4_VERSION
              - make -j2
              - make PREFIX=$HOME install
              - cd ../
              - git clone https://github.com/google/protobuf.git
              - cd protobuf
              - git checkout tags/$PROTOBUF_VERSION
              - bash autogen.sh
              - ./configure --prefix=$HOME
              - make -j2
              - make install
              - cd ../
          script:
              - mkdir cpp-proio/build
              - cd cpp-proio/build
              - cmake -DCMAKE_PREFIX_PATH=$HOME -DREPORT_COVERAGE=ON ../
              - make -j2
              - CTEST_OUTPUT_ON_FAILURE=True make test
          after_success:
              - lcov --directory . --capture --output-file coverage.info
              - lcov --remove coverage.info '/usr/*' --output-file coverage.info
              - lcov --list coverage.info
              - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
        - language: cpp
          compiler: g++
          env:
              - PROTOBUF_VERSION: latest
              - LZ4_VERSION: latest
          install:
              - git clone https://github.com/lz4/lz4.git
              - cd lz4
              - make -j2
              - make PREFIX=$HOME install
              - cd ../
              - git clone https://github.com/google/protobuf.git
              - cd protobuf
              - bash autogen.sh
              - ./configure --prefix=$HOME
              - make -j2
              - make install
              - cd ../
          script:
              - mkdir cpp-proio/build
              - cd cpp-proio/build
              - cmake -DCMAKE_PREFIX_PATH=$HOME ../
              - make -j2
              - CTEST_OUTPUT_ON_FAILURE=True make test

        - language: go
          go: 1.8.x
        - language: go
          go: 1.9.x
        - language: go
          go: 1.10.x
          install:
              - go get golang.org/x/tools/cmd/cover
              - go get -t ./...
          script: go test -v -race -covermode=atomic -coverprofile=coverage.txt ./go-proio
          after_success: bash <(curl -s https://codecov.io/bash)
        - language: go
          go: master

        - language: python
          python: 2.7
          install: pip install --upgrade pytest ./py-proio
          script: pytest ./py-proio
        - language: python
          python: 3.6
          install: pip install --upgrade pytest pytest-coverage codecov ./py-proio
          script: pytest --cov=py-proio/proio --cov-report term-missing ./py-proio
          after_success: codecov
        - language: python
          python: nightly
          install: pip install --upgrade pytest ./py-proio
          script: pytest ./py-proio

        - language: python
          stage: doc
          env:
              - PY_DOCS_REPO_REF: github.com/decibelcooper/py-proio-docs.git
          install: pip install --upgrade sphinx pkginfo
          script:
              - cd py-proio
              - python setup.py sdist
              - pip install --upgrade .
              - cd docs
              - bash genAndDeploy.sh

        - language: cpp
          env:
              - CPP_DOCS_REPO_REF: github.com/decibelcooper/cpp-proio-docs.git
          addons:
              apt:
                  packages:
                      doxygen
          script:
              - cd cpp-proio/docs
              - bash genAndDeploy.sh


    allow_failures:
        - env:
              - PROTOBUF_VERSION: latest
              - LZ4_VERSION: latest
        - go: master
        - python: nightly
    fast_finish: true
    sudo: false
