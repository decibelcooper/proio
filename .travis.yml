branches:
    only:
        - master

stages:
    - name: pretest
      if: type = push
    - test
    - name: doc
      if: type = push
    - name: deploy
      if: type = push

matrix:
    include:
        - language: generic
          stage: pretest
          install: docker info
          script: bash ci/build-aux-image.sh

        - language: cpp
          stage: test
          compiler: g++
          install: docker pull $DOCKER_AUX_REPO
          script:
              - mkdir cpp-proio/build
              - cd cpp-proio/build
              - docker run -v $TRAVIS_BUILD_DIR:$TRAVIS_BUILD_DIR -w $PWD $DOCKER_AUX_REPO cmake -DREPORT_COVERAGE=ON ../
              - docker run -v $TRAVIS_BUILD_DIR:$TRAVIS_BUILD_DIR -w $PWD $DOCKER_AUX_REPO make -j2
              - docker run -v $TRAVIS_BUILD_DIR:$TRAVIS_BUILD_DIR -w $PWD $DOCKER_AUX_REPO make test
          after_success:
              - docker run $(bash <(curl -s https://codecov.io/env)) -v $TRAVIS_BUILD_DIR:$TRAVIS_BUILD_DIR -w $PWD $DOCKER_AUX_REPO bash -c "bash <(curl -s https://codecov.io/bash)"

        - language: go
          go: 1.8.x
        - language: go
          go: 1.9.x
        - language: go
          go: 1.10.x
          install:
              - go get golang.org/x/tools/cmd/cover
              - go get -t ./...
          script: go test -v -race -covermode=atomic -coverprofile=coverage.txt ./go-proio
          after_success: bash <(curl -s https://codecov.io/bash)
        - language: go
          go: master

        - language: python
          python: 2.7
          install:
              - docker pull $DOCKER_AUX_REPO
              - sudo cp ci/protoc /bin/protoc
              - sudo chmod +x /bin/protoc
              - pip install --upgrade pytest protobuf lz4
          script:
              - cd py-proio
              - python setup.py build_py
              - pytest
        - language: python
          python: 3.6
          install:
              - docker pull $DOCKER_AUX_REPO
              - sudo cp ci/protoc /bin/protoc
              - sudo chmod +x /bin/protoc
              - pip install --upgrade pytest pytest-coverage codecov protobuf lz4
          script:
              - cd py-proio
              - python setup.py build_py
              - pytest --cov=proio --cov-report term-missing
          after_success: codecov
        - language: python
          python: nightly
          install:
              - docker pull $DOCKER_AUX_REPO
              - sudo cp ci/protoc /bin/protoc
              - sudo chmod +x /bin/protoc
              - pip install --upgrade pytest protobuf lz4
          script:
              - cd py-proio
              - python setup.py build_py
              - pytest

        - language: java
          jdk: openjdk8
          install:
              - docker pull $DOCKER_AUX_REPO
              - sudo cp ci/protoc /bin/protoc
              - sudo chmod +x /bin/protoc
              - mvn -f java-proio install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
          script: mvn -f java-proio test -B

        - language: python
          stage: doc
          env:
              - PY_DOCS_REPO_REF: github.com/decibelcooper/py-proio-docs.git
          install:
              - docker pull $DOCKER_AUX_REPO
              - sudo cp ci/protoc /bin/protoc
              - sudo chmod +x /bin/protoc
              - pip install --upgrade sphinx pkginfo
          script:
              - cd py-proio
              - python setup.py build_py sdist
              - pip install --upgrade .
              - cd docs
              - bash genAndDeploy.sh

        - language: cpp
          env:
              - CPP_DOCS_REPO_REF: github.com/decibelcooper/cpp-proio-docs.git
          addons:
              apt:
                  packages:
                      doxygen
          script:
              - cd cpp-proio/docs
              - bash genAndDeploy.sh

        - language: python
          stage: deploy
          install:
              - docker pull $DOCKER_AUX_REPO
              - sudo cp ci/protoc /bin/protoc
              - sudo chmod +x /bin/protoc
              - pip install --upgrade protobuf lz4
          script:
              - cd py-proio
              - sed -i "s/\(version = '[0-9]*\.[0-9]\)'/\1.$TRAVIS_BUILD_NUMBER'/" setup.py
              - sed -i "s/'protobuf==[0-9\.*]*'/'$(pip freeze | grep protobuf | sed 's/==/>=/')'/" setup.py
              - python setup.py build_py
          deploy:
              provider: pypi
              user: $PYPI_USERNAME
              password: $PYPI_PASSWORD
              skip_cleanup: true

    allow_failures:
        - go: master
        - python: nightly
    fast_finish: true
    sudo: true
    services:
        - docker
