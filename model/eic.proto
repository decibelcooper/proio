syntax = "proto3";
package proio.model.eic;
option go_package = "github.com/decibelcooper/proio/go-proio/model/eic";
option java_package = "proio.model";
option java_outer_classname = "Eic";

////// PRIMARY DATA MODEL MESSAGES //////

message Particle {
    // ProIO entry identifiers that point to parent Particles
    repeated uint64 parent = 1;
    // ProIO entry identifiers that point to child Particles
    repeated uint64 child = 2;
    // PDG code
    sint32 pdg = 3;
    // position in mm and time in ns
    XYZTD vertex = 4;
    // momentum in GeV
    XYZD p = 5;
    // mass in GeV
    double mass = 6;
    // charge in units of e
    float charge = 7;
    XYZF spin = 8;
}

// simulation hit
message SimHit {
    // optional ID to circumvent volume lookup from global position during
    // digitization
    uint64 volumeid = 1;
    // spatial in mm and time in ns
    XYZTD globalprepos = 2;
    // spatial in mm and time in ns
    XYZTD globalpostpos = 3;
    // energy in GeV
    float edep = 4;
    // "particle" is a ProIO entry identifier that points to the Particle
    // responsible for this hit.
    uint64 particle = 5;
}

// reconstructed hit
message ReconHit {
    // optional ID for identifying the cell that this hit came from
    uint64 cellid = 1;
    // energy in GeV
    float edep = 2;
    float edeperr = 3;
    // Multiple possible positions can be specified.
    repeated RandomPos pos = 4;
    // "source"s are ProIO entry identifiers that may point to either SimHits
    // or Particles responsible for the ReconHit.
    repeated uint64 source = 5;
}

// randomly-distributed position
message RandomPos {
    // spatial in mm and time in ns
    XYZTD mean = 1;
    // "weightmod" describes additional weight to be applied to this position.
    // For the case of multiple possible positions, it is implied that by
    // default each position is equally likely.  This can be changed by adding
    // weight to positions.  To make one position twice as likely as a position
    // without a weight modifier, set weightmod to +1.
    float weightmod = 2;
    // These Distributions describe independent variance contributions, and
    // repeated Distributions imply a convolution.  Orthogonal to the space
    // spanned by the Distributions, the RandomPos is assumed to not vary.
    repeated Distribution distrib = 3;
}

////// SECONDARY DATA MODEL MESSAGES //////

message Distribution {
    enum Type {
        NORMAL = 0;
        UNIFORM = 1;
    }
    Type type = 2;
    // spatial in mm and time in ns
    XYZTF variance = 3;
}

message XYZTD {
    double x = 1;
    double y = 2;
    double z = 3;
    double t = 4;
}

message XYZTF {
    float x = 1;
    float y = 2;
    float z = 3;
    float t = 4;
}

message XYZD {
    double x = 1;
    double y = 2;
    double z = 3;
}

message XYZF {
    float x = 1;
    float y = 2;
    float z = 3;
}
