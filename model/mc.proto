syntax = "proto2";
package proio.model.mc;
option go_package = "github.com/decibelcooper/proio/go-proio/model/mc";
option java_package = "proio.model";
option java_outer_classname = "Mc";


// this message is for general Monte Carlo generators
message MCParameters {
    optional uint64 number = 1;
    optional int32 processid = 2;
    optional double weight = 3;
    // keep metadata as key-value (int)
    repeated MapInt imap = 4;       
    // keep metadata as key-value (double)
    repeated MapDouble dmap = 5; 
}
// map to store arbitrary data as key-int value 
message MapInt {
    // key for integer value 
    required string key = 1;        
    // value 
    repeated sint32 value = 2;      
}
// map to store arbitrary data as key-double value 
message MapDouble {
    // key for double value
    required string key = 1;
    // value
    repeated double value = 2;      
}
// this block is only for Pythia8
message Pythia8Parameters {   
    optional double weight_sum = 1;
    optional double merging_weight = 2;
    //transverse momentum
    optional double pt_hat = 3;     
    optional double alpha_em = 4;
    optional double alpha_s = 5;
    // Q-scale used in evaluation of PDF’s (in GeV)
    optional double scale_q_fac = 6;
    // event weight
    optional double weight = 7;      
     // fraction of beam momentum carried by first parton (”beam side”)
    optional double x1 = 8;        
    // fraction of beam momentum carried by second parton (”target side”)
    optional double x2 = 9;         
    // flavour code of first parton
    optional uint64 id1 = 10;       
    // flavour code of second parton
    optional uint64 id2 = 11;       
}
